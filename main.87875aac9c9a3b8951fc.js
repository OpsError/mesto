(()=>{"use strict";class e{constructor(e){this._popupSelector=e,this._handleEscClose=this._handleEscClose.bind(this)}close(){this._popupSelector.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popupSelector.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popupSelector.addEventListener("mousedown",(e=>{(e.target.classList.contains("popup")||e.target.classList.contains("popup__close-icon"))&&this.close()}))}}class t extends e{constructor(e,t){super(e),this._handleSubmitForm=t,this._form=e.querySelector(".popup__form"),this._inputList=e.querySelectorAll(".popup__input")}_getInputValues(){return this._inputValueList={},this._inputList.forEach((e=>{this._inputValueList[e.name]=e.value})),this._inputValueList}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._list=this._getInputValues(),this._handleSubmitForm({name:this._list.title,description:this._list.description})})),super.setEventListeners()}close(){super.close(),this._form.reset()}}class s{constructor(e,t){this._formElement=t,this._config=e,this._inputList=Array.from(t.querySelectorAll(this._config.inputSelector)),this._buttonElement=t.querySelector(this._config.submitButtonSelector)}_showInputError=(e,t)=>{const s=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._config.inputErrorClass),s.textContent=t,s.classList.add(this._config.errorClass)};_hideInputError=e=>{const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass),t.textContent=""};_checkInputValidity=e=>{e.validity.valid?this._hideInputError(e):(console.log(e.validationMessage),this._showInputError(e,e.validationMessage))};_hasInvalidInput=()=>this._inputList.some((e=>!e.validity.valid));_toggleButtonState=()=>{this._hasInvalidInput()?(this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)};_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}blockButtonSave(e){this._buttonElement.classList.add("popup__save_inactive"),this._buttonElement.disabled=!0}enableValidation(){this._setEventListeners()}}class i{constructor(e,t,{openImage:s}){this._data=e,this._templateSelector=t,this._openImage=s,this._element=this._getTemplate(),this._elementPhoto=this._element.querySelector(".element__photo")}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}_setEventListeners(){const e=this._element.querySelector(".element__like"),t=this._element.querySelector(".element__trash"),s=this._element.querySelector(".element__like-icon");e.addEventListener("click",(()=>{s.classList.toggle("element__like-icon_active")})),t.addEventListener("click",(()=>{this._element.remove(),this._element=null})),this._elementPhoto.addEventListener("click",(()=>{this._openImage({link:this._data.description,name:this._data.name})}))}generateCard(){return this._elementPhoto.src=this._data.description,this._elementPhoto.alt=this._data.name,this._element.querySelector(".element__description").textContent=this._data.name,this._setEventListeners(),this._element}}const n=document.querySelector(".page"),o=n.querySelector(".form-edit"),r=n.querySelector(".form-add"),l=document.querySelector(".popup_image-full"),p=n.querySelector(".profile__edit-button"),c=n.querySelector(".profile__add-button"),a=n.querySelector(".profile__name"),_=n.querySelector(".profile__description"),u=n.querySelector(".profile__photo"),d=o.querySelector(".popup"),h=o.querySelector(".popup__input_type_name"),m=o.querySelector(".popup__input_type_description"),f=r.querySelector(".popup"),g=r.querySelector(".popup__input_type_title"),S=r.querySelector(".popup__input_type_link"),v=(l.querySelector(".popup"),{fieldsetSelector:".popup__form-set",inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"}),y=new class extends e{constructor(e){super(e),this._image=this._popupSelector.querySelector(".popup__image"),this._figcaption=this._popupSelector.querySelector(".popup__figcaption")}open(e,t){this._image.src=t,this._image.alt=e,this._figcaption.textContent=e,super.open()}}(l);function E({link:e,name:t}){y.open(t,e)}function b(e){return new i(e,"#element",{openImage:E}).generateCard()}y.setEventListeners();const L=new s(v,r.querySelector(".popup__form")),q=new s(v,o.querySelector(".popup__form"));L.enableValidation(),q.enableValidation(),new class{constructor(e){this._url=e.baseUrl,this._headers=e.headers}_handleResponse(e){return e.ok?e.json():Promise.reject(new Error("Произошла ошибка"))}getInfo(){return fetch(`${this._url}/users/me`,{headers:this._headers}).then(this._handleResponse)}}({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-60",headers:{authorization:"11c262d9-4172-458c-924e-d3009da526d4","Content-type":"application/json"}}).getInfo().then((e=>{a.textContent=e.name,_.textContent=e.about,u.src=e.avatar}));const C=new t(f,(({name:e,description:t})=>{const s=b({name:e,description:t});x.addItem(s),C.close()}));C.setEventListeners();const I=new class{constructor({title:e,description:t}){this._title=e,this._description=t,this._profileName=document.querySelector(".profile__name"),this._profileDescription=document.querySelector(".profile__description")}getUserInfo(){return{name:this._title.textContent,description:this._description.textContent}}setUserInfo(e,t){this._profileName.textContent=e,this._profileDescription.textContent=t}}({title:a,description:_}),k=new t(d,(({name:e,description:t})=>{I.setUserInfo(e,t),k.close()}));k.setEventListeners();const x=new class{constructor({items:e,renderer:t},s){this._items=e,this._renderer=t,this._selector=document.querySelector(s)}addItem(e){this._selector.prepend(e)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}}({items:[{name:"Манджиро Сано",description:"https://i.pinimg.com/564x/a2/db/73/a2db73896e7d9785bc3ee3781c544fae.jpg"},{name:"Сатору Годзё",description:"https://i.pinimg.com/564x/bd/9e/0c/bd9e0c78a5af0557f6bfd5698d0747a2.jpg"},{name:"Фуши",description:"https://i.pinimg.com/564x/a8/62/a5/a862a55f111d580a2da65154d9760397.jpg"},{name:"Эрен Йегер",description:"https://i.pinimg.com/564x/f7/68/6d/f7686dfa04ad48af95497c9303b26471.jpg"},{name:"Юдзи Итадори",description:"https://i.pinimg.com/564x/09/ad/73/09ad73cc4ee3bb1905f9374ff79f5823.jpg"},{name:"Кёдзиро Ренгоку",description:"https://i.pinimg.com/564x/11/75/d1/1175d1bb70114306b7b31abeae11b69c.jpg"}],renderer:e=>{const t=b(e);x.addItem(t)}},".elements");x.renderItems(),c.addEventListener("click",(()=>{C.open(),g.value="",S.value="",L.blockButtonSave(f)})),p.addEventListener("click",(()=>{const e=I.getUserInfo();h.value=e.name,m.value=e.description,k.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,